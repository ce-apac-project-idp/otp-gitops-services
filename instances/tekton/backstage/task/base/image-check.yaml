apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: rox-image-check
spec:
  params:
    - description: >-
        Secret containing the address:port tuple for StackRox Central (example -
        rox.stackrox.io:443)
      name: rox_central_endpoint
      type: string
    - description: Secret containing the StackRox API token with CI permissions
      name: rox_api_token
      type: string
    - description: 'Full name of image to scan (example -- gcr.io/rox/sample:5.0-rc1)'
      name: image
      type: string
      default: nothing
    - name: image_digest
      description:  Digest in sha256 hash format of the image to check
      type: string
      default: nothing
    - name: file
      type: string
      description: YAML file in the deployfiles workspace
  results:
    - description: Output of `roxctl image check`
      name: check_output
  workspaces:
    - description: The workspace consisting of maven project.
      name: workspace
  steps:
    - env:
        - name: ROX_API_TOKEN
          valueFrom:
            secretKeyRef:
              key: rox_api_token
              name: $(params.rox_api_token)
        - name: ROX_CENTRAL_ENDPOINT
          valueFrom:
            secretKeyRef:
              key: rox_central_endpoint
              name: $(params.rox_central_endpoint)
        - name: REPO_PATH
          value: $(workspaces.workspace.path)
      image: registry.access.redhat.com/ubi8/ubi-minimal:latest
      name: rox-image-check
      resources: {}
      script: |
        #!/usr/bin/env bash
        set +x

        echo $REPO_PATH
        cd $REPO_PATH
        cat $(params.file)

        image="$(grep -A0 'image:' $(params.file) | awk '{ print $2}')"
        echo ${image}

        curl -k -L -H "Authorization: Bearer $ROX_API_TOKEN" $ROX_CENTRAL_ENDPOINT/api/cli/download/roxctl-linux --output ./roxctl  > /dev/null; echo "Getting roxctl"
        chmod +x ./roxctl  > /dev/null

        endpoint=${ROX_CENTRAL_ENDPOINT}:443

        ./roxctl image check --insecure-skip-tls-verify -e $endpoint --image ${image}
